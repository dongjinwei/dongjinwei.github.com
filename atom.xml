<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Apex]]></title>
  <link href="http://dongjinwei.github.io/atom.xml" rel="self"/>
  <link href="http://dongjinwei.github.io/"/>
  <updated>2014-11-12T14:48:51+08:00</updated>
  <id>http://dongjinwei.github.io/</id>
  <author>
    <name><![CDATA[Apex]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[IntelliJ IDEA + TOMCAT 创建web站点]]></title>
    <link href="http://dongjinwei.github.io/blog/2014/11/11/intellij-idea-plus-tomcat-chuang-jian-webzhan-dian/"/>
    <updated>2014-11-11T15:48:23+08:00</updated>
    <id>http://dongjinwei.github.io/blog/2014/11/11/intellij-idea-plus-tomcat-chuang-jian-webzhan-dian</id>
    <content type="html"><![CDATA[<h3>下载InterlliJ IDEA专业版</h3>

<p>注意必须要是专业版，社区版是没有创建web application功能的，key可以从网上找到</p>

<h3>创建web application</h3>

<p><img src="http://img.hb.aicdn.com/3d31864c2f7e04020d7d2b847352c1818e6deed113511-JGktjx_fw658" alt="icon" /></p>

<h3>本地下载tomcat并配置</h3>

<p><img src="http://img.hb.aicdn.com/ecbca7f88f75b9297ba5699eb6a022f712dd24df17fc0-zkmMnk_fw658" alt="icon" />
<img src="http://img.hb.aicdn.com/83529faa9f07c39e58b690b5a782074bf70913331a69d-AA7HnV_fw658" alt="icon" />
<img src="http://img.hb.aicdn.com/00cd60d2f7cc6bc1a8f5f794d3b54a164ec0360113681-Wxnsmx_fw658" alt="icon" /></p>

<h3>运行web app</h3>

<p>完整结构：<img src="http://img.hb.aicdn.com/71232e1c0dae6121a46280d585d666e1bb5874ef7000-qx9LRh_fw658" alt="icon" />
点击运行后，会自动启动tomcat，可以输入<a href="http://localhost:8080/">http://localhost:8080/</a>就行查看。</p>

<h3>丰富网页内容</h3>

<p>默认生成的index.jsp是个空页面，而且我们对html/css又不熟悉，如何丰富一下我们的页面呢。那就只能抄了，打开某个你中意的网站，右键查看源代码，直接拷贝其html源代码到我们的index.jsp或者index.html中，点击运行，然后再对照页面删删改改，改成我们所期望的界面</p>

<h3>部署到云端</h3>

<ol>
<li>ssh登录到云主机</li>
<li><p>下载tomcat并解压</p>

<pre><code> wget http://apache.communilink.net/tomcat/tomcat-8/v8.0.14/bin/apache-tomcat-8.0.14.zip
 unzip apache-tomcat-8.0.14.zip
</code></pre></li>
<li><p>传送本地app文件至云端。一般将工程打成war包，并将其放到tomcat的webapps文件夹下，tomcat将会自动解压此包。我直接将web工程文件夹放到webapps下也可以，如下</p>

<pre><code> scp -r hello/ ssh root@xxx.xxx.xx.xx:/usr/local/apache-tomcat-8.0.14/webapps/
</code></pre></li>
<li><p>启动tomcat</p>

<pre><code> cd tomcat
 chmod 755 bin/*.sh
 bin/startup.sh
</code></pre>

<p>至此，云端部署完毕，可以通过云主机ip访问了</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Octopress搭建github博客]]></title>
    <link href="http://dongjinwei.github.io/blog/2014/11/04/shi-yong-octopressda-jian-githubbo-ke/"/>
    <updated>2014-11-04T14:57:57+08:00</updated>
    <id>http://dongjinwei.github.io/blog/2014/11/04/shi-yong-octopressda-jian-githubbo-ke</id>
    <content type="html"><![CDATA[<p>这篇文章介绍在Mac上使用octopress+ruby，利用github pages功能，搭建一个github风格的blog</p>

<h2>安装command line tool</h2>

<p>加入你的电脑上已经安装了xcode，则在其preference里可以直接安装这个命令行工具。假设你的mac里没装xcode，则去<a href="https://developer.apple.com/downloads">https://developer.apple.com/downloads</a>直接下载dmg包</p>

<h2>安装homebrew</h2>

<pre><code>ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
</code></pre>

<h2>安装gcc</h2>

<p>假如已经有了，则跳过此步骤</p>

<pre><code>brew tap homebrew/dupes
brew install apple-gcc42
</code></pre>

<h2>安装1.9.3以上版本的ruby</h2>

<pre><code>brew install rbenv
brew install ruby-build
rbenv install 1.9.3-p0
rbenv rehash
</code></pre>

<p>使用如下命令，确认默认使用的ruby版本为1.9.3</p>

<pre><code>ruby --version
</code></pre>

<p>如果是低于1.9.3的版本，下载rvm进行版本控制</p>

<pre><code>$ curl -L get.rvm.io | bash -s stable
$ source ~/.bashrc
$ source ~/.bash_profile
rvm install 1.9.3
rvm use 1.9.3  --default
</code></pre>

<p>然后再检查一遍版本号，一定要确保ruby版本要大于等于1.9.3</p>

<h2>安装Octopress</h2>

<pre><code>git clone git://github.com/imathis/octopress.git octopress
cd octopress
gem install bundler
rbenv rehash
bundle install
rake install
</code></pre>

<p>假如没装xcode，要先做特殊处理,不然执行上面的命令会发生错误</p>

<pre><code>sudo xcode-select --switch /usr/bin
sudo mv /usr/bin/xcrun /usr/bin/xcrun-orig
sudo vim /usr/bin/xcrun
sudo chmod 755 /usr/bin/xcrun
</code></pre>

<h2>配置Octopress</h2>

<p>根据自己的需要更改_config.yml中的url、title、subtitle、author字段</p>

<h2>将博客部署到github</h2>

<ol>
<li>在自己的github账号中新建名称类似yourname.github.com的仓库</li>
<li><p>自动配置上面创建的仓库，需要输入仓库地址</p>

<pre><code> $ rake setup_github_pages
</code></pre></li>
<li><p>将博客真正部署到仓库中</p>

<pre><code> rake generate
 rake deploy
</code></pre>

<p>现在就可以访问username.github.com了。注意有可能要等几分钟才能打得开</p></li>
</ol>


<h2>开始写博客</h2>

<p>使用Octopress提供的task创建一个博文</p>

<pre><code>rake new_post["title"]
</code></pre>

<p>创建出来的文件默认为markdown格式，在<code>source/_posts</code>目录下，可以使用 <a href="http://25.io/mou/">Mou</a>进行编辑保存。写完之后进行提交</p>

<pre><code>    $ rake generate
    $ git add .
    $ git commit -am "Some comment here." 
    $ git push origin source
    $ rake deploy
</code></pre>

<p>到此结束！</p>
]]></content>
  </entry>
  
</feed>
